# -*- coding: utf-8 -*-
"""student_marks_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KeFduAD8kkLO2Yc-pDNf58UMCiwAtK1D
"""

import pandas as pd
import matplotlib.pyplot as plt

import sklearn 
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

dataset=pd.read_csv("studentmarks_dataset.csv")

dataset.head()

dataset.tail()

dataset.describe()

dataset.head(8)

dataset.plot(x="Hours",y="Scores",color="g",style="*")
plt.title("Relationship between Percentage and Hours")
plt.xlabel("Study Hours")
plt.ylabel("Percentage Score")
plt.grid(True)
plt.show()

X=dataset.iloc[:,:-1].values
Y=dataset.iloc[:,1].values

X

Y

X_train,x_test,Y_train,y_test=train_test_split(X,Y, train_size=0.8,random_state=0)

X_train

x_test

Y_train

regarssion_model=LinearRegression()
regarssion_model.fit(X_train,Y_train)

Y_predicted=regarssion_model.predict(x_test)

data_after_prediction=pd.DataFrame({"Actual_values":y_test,"Predicted_values":Y_predicted,"Difference_values":Y_predicted-y_test})

data_after_prediction

print("Mean Absolute Error= ")
Error_checking=metrics.mean_absolute_error(y_test,Y_predicted)
Error_checking

student_study_Hours=float(input())

Percentage=regarssion_model.predict([[student_study_Hours]])

Percentage